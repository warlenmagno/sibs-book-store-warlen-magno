// Generated by Dagger (https://dagger.dev).
package com.sibsBookStore.data;

import com.sibsBookStore.data.remote.api.BookService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideAudioBookServiceApiFactory implements Factory<BookService> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideAudioBookServiceApiFactory(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public BookService get() {
    return provideAudioBookServiceApi(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideAudioBookServiceApiFactory create(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideAudioBookServiceApiFactory(module, retrofitProvider);
  }

  public static BookService provideAudioBookServiceApi(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.provideAudioBookServiceApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
